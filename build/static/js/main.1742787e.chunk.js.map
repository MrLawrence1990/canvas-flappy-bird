{"version":3,"sources":["elelemt/ball.js","elelemt/pillar.js","App.js","serviceWorker.js","index.js"],"names":["Ball","r","color","this","radius","vx","vy","x","y","candrod","canvas","grv","ctx","getContext","up","beginPath","arc","Math","PI","fillStyle","fill","t","paint","randomNum","minNum","maxNum","arguments","length","parseInt","random","move_count","fillRect","width","height","waiting","inited","floor","g","b","toString","randomColor","round","next_trigger","triger_space","pillar","next","reset","App","pillars","pause","score","document","getElementById","font","strokeStyle","ball","paintTo","initPillar","animate","onkeydown","e","code","toggleBirdVy","onkeyup","nextPillar","i","Pillar","setNext","push","clearRect","save","restore","run","forEach","move","crash","strokeText","toFixed","window","requestAnimationFrame","bind","alert","status","toggleGrv","id","style","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1742787e.chunk.js","sourcesContent":["const G = 9.8\nconst SPEED_LEVEL = 80\nconst TANXINGXISHU = 0.7\n\nexport default class Ball {\n  constructor(r, color) {\n    this.radius = r;\n    this.color = color;\n    this.vx = 0;\n    this.vy = 0;\n    this.x = 0;\n    this.y = 0;\n    this.candrod = true;\n    this.canvas = null\n    this.grv = 1\n  }\n  paintTo (canvas) {\n    if (!this.canvas) {\n      this.canvas = canvas\n      this.ctx = canvas.getContext(\"2d\")\n    }\n  }\n  toggleGrv (up) {\n    this.grv = up? -1 : 1\n  }\n  paint () {\n    if (!this.canvas) {\n      return\n    }\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, this.radius - 1, 0, Math.PI * 2);\n    this.ctx.fillStyle = this.color;\n    this.ctx.fill();\n  }\n  run (t) {\n    this.vy = this.vy + G * t * this.grv;\n    this.y += t * this.vy * SPEED_LEVEL;\n    this.paint();\n  }\n}","const randomColor = function () {\n  var r = Math.floor((Math.random() + Math.random()) * 128);\n  var g = Math.floor((Math.random() + Math.random()) * 128);\n  var b = Math.floor((Math.random() + Math.random()) * 128);\n  var color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\n  return color;\n}\n\nconst randomNum = function (minNum, maxNum) {\n  switch (arguments.length) {\n    case 1:\n      return parseInt(Math.random() * minNum + 1, 10);\n    case 2:\n      return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\n    default:\n      return 0;\n  }\n}\n\nconst SPEED = 200\nconst WAITING_SPACE = 100\n\nexport default class {\n  constructor(canvas) {\n    this.canvas = canvas\n    this.ctx = canvas.getContext(\"2d\")\n    this.move_count = 0\n  }\n  paint () {\n    if (!this.canvas) {\n      return\n    }\n    this.ctx.fillStyle = this.color;\n    this.ctx.fillRect(this.x, this.y, this.width, this.height);\n  }\n  reset (waiting) {\n    // 重置到起点\n    this.inited = true\n    this.color = randomColor()\n    this.width = randomNum(10, 60)\n    this.height = randomNum(200, this.canvas.height - 100)\n    this.x = this.canvas.width + WAITING_SPACE\n    this.up = Math.round(Math.random())\n    this.y = this.up ? 0 : this.canvas.height - this.height\n    this.next_trigger = false\n    this.triger_space = this.width + randomNum(160, 200)\n    this.waiting = waiting\n  }\n\n  setNext (pillar) {\n    this.next = pillar\n  }\n\n  move (t) {\n    if (!this.inited || this.waiting) {\n      return\n    }\n    this.x -= t * SPEED;\n    if (this.x < -WAITING_SPACE) {\n      this.reset(true)\n    }\n    if ((this.x + this.width) < ((this.canvas.width + WAITING_SPACE) - this.triger_space) && !this.next_trigger) {\n      this.next && this.next.reset()\n      this.next_trigger = true\n    }\n    this.paint();\n  }\n}","import React from 'react';\nimport './App.css';\nimport Ball from './elelemt/ball'\nimport Pillar from './elelemt/pillar';\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.pillars = []\n    this.pause = false\n    this.score = 0\n    this.t = 16 / 1000;\n  }\n  componentDidMount () {\n    this.canvas = document.getElementById('cas')\n    this.ctx = this.canvas.getContext(\"2d\")\n    this.ctx.font = 'oblique small-caps normal 24px Arial';\n    this.ctx.strokeStyle = '#ff7a45'\n    this.ball = new Ball(20, 'red', this.canvas)\n    this.ball.paintTo(this.canvas)\n    this.initPillar()\n    this.reset()\n    this.animate()\n    document.onkeydown = (e) => {\n      if (e.code === 'Space') {\n        if (this.pause) {\n          this.pause = false\n          this.pillars[0].reset()\n        }\n        this.toggleBirdVy(true)\n      }\n    }\n    document.onkeyup = (e) => {\n      if (e.code === 'Space') {\n        this.toggleBirdVy(false)\n      }\n    }\n    this.pause = true\n  }\n  initPillar () {\n    let pillar\n    let nextPillar\n    for (let i = 0; i <= 10; i++) {\n      pillar = nextPillar ? nextPillar : new Pillar(this.canvas)\n      if (i === 10) {\n        pillar.setNext(this.pillars[0])\n      } else {\n        nextPillar = new Pillar(this.canvas)\n        pillar.setNext(nextPillar)\n      }\n      this.pillars.push(pillar)\n    }\n  }\n  animate () {\n    if (!this.pause) {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n      this.ctx.save();\n      this.ctx.fillStyle = \"rgba(255,255,255,0.2)\";\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n      this.ctx.restore();\n      this.ball.run(this.t)\n      this.pillars.forEach(pillar => {\n        pillar.move(this.t)\n        if (this.crash(pillar, this.ball)) {\n          this.pause = true\n        }\n      })\n      this.score = this.score + 0.01\n      this.ctx.strokeText(`score: ${this.score.toFixed(2)}`, 20, 40)\n    }\n    window.requestAnimationFrame(this.animate.bind(this));\n  }\n  crash (pillar, ball) {\n    if ((ball.x + ball.radius) > pillar.x && ball.x < (pillar.x + pillar.width) && ((ball.y < pillar.height && pillar.up) || ((ball.y + ball.radius) > (this.canvas.height - pillar.height) && !pillar.up))) {\n      alert('crash')\n      this.reset()\n    }\n    if (ball.y <= ball.radius || ball.y >= (this.canvas.height - ball.radius)) {\n      alert('crash')\n      this.reset()\n    }\n  }\n  reset () {\n    this.ball.x = 200\n    this.ball.y = 200\n    this.pillars.forEach(pillar => {\n      pillar.reset(true)\n    })\n    this.score = 0\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    this.ball.run(this.t)\n    this.ctx.strokeText(`按空格键控制`, this.canvas.width - 160,40)\n    this.pause = true\n  }\n  toggleBirdVy (status) {\n    this.ball.toggleGrv(status);\n  }\n  render () {\n    return <canvas id=\"cas\" width=\"800\" height=\"400\" style={{ 'backgroundColor': 'rgba(0,0,0,.1)' }}></canvas>\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}